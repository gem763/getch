# Generated by Django 2.2.7 on 2020-01-03 04:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import getchapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nlikes', models.IntegerField(default=0)),
                ('text', models.TextField(blank=True, max_length=500, null=True)),
                ('on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='getchapp.Channel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('channel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='getchapp.Channel')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=120)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('getchapp.channel', models.Model),
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('channel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='getchapp.Channel')),
                ('fullname_en', models.CharField(blank=True, max_length=120, null=True)),
                ('fullname_kr', models.CharField(blank=True, max_length=120, null=True)),
                ('origin', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('getchapp.channel',),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('channel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='getchapp.Channel')),
            ],
            options={
                'abstract': False,
            },
            bases=('getchapp.channel',),
        ),
        migrations.CreateModel(
            name='Pix',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('selected', models.BooleanField(default=False)),
                ('default', models.BooleanField(default=False)),
                ('src', models.ImageField(max_length=500, upload_to=getchapp.models._image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getchapp.Channel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='channel',
            name='master',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.SET(getchapp.models.default_master), related_name='mastering', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('selected', models.BooleanField(default=False)),
                ('default', models.BooleanField(default=False)),
                ('src', models.ImageField(max_length=500, upload_to=getchapp.models._image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getchapp.Channel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
